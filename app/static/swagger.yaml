openapi: 3.0.0
info:
  title: Flask API
  version: 1.0.0
tags:
  - name: auth
    description: Endpoints related to user authentication and registration
  - name: project
    description: Endpoints related to Projects
  - name: task
    description: Endpoints related to Tasks
  - name: user
    description: Endpoints related to Users
paths:
  "/register":
    post:
      tags:
        - auth
      summary: Register a new user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - username
              - email
              - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/login":
    post:
      tags:
        - auth
      summary: Login with username or email
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
              - password
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/projects":
    get:
      tags:
        - project
      summary: Get all projects
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        name:
                          type: string
                        description:
                          type: string
                        start_date:
                          type: string
                        end_date:
                          type: string
                        status:
                          type: string
                        priority:
                          type: string
                        owner_id:
                          type: integer
  "/project/add":
    post:
      tags:
        - project
      summary: Add a new project
      security:
      - BearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                priority:
                  type: string
              required:
              - title
              - description
      responses:
        '201':
          description: Project created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: integer
                      owner:
                        type: integer
                      title:
                        type: string
                      description:
                        type: string
                      priority:
                        type: string
                      status:
                        type: string
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  "/project/{id}":
    get:
      tags:
        - project
      summary: Get a project by ID
      security:
      - BearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  project:
                    type: object
                    properties:
                      id:
                        type: integer
                      owner:
                        type: integer
                      title:
                        type: string
                      description:
                        type: string
                      priority:
                        type: string
                      status:
                        type: string
                      tasks:
                        type: array
                        items:
                          type: object
                          properties:
                            id:
                              type: integer
                            title:
                              type: string
                            description:
                              type: string
                            priority:
                              type: string
                            assignee:
                              type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  "/project/delete/{id}":
    delete:
      tags:
        - project
      summary: Delete a project by ID
      description: You must be an owner of that project to delete it
      security:
      - BearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: Project deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /project/{project_id}/task/add:
    post:
      tags:
        - task
      summary: Add a task to a project
      parameters:
        - name: project_id
          in: path
          description: ID of the project
          required: true
          schema:
            type: integer
        - in: body
          name: task
          description: Task object
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              priority:
                type: integer
              assignee_id:
                type: integer
      responses:
        '201':
          description: Task created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      description:
                        type: string
                      priority:
                        type: integer
                      assignee_id:
                        type: integer
        '400':
          description: Missing required fields
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        '404':
          description: Project not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

  /project/{project_id}/task/{task_id}:
    put:
      tags:
        - task
      summary: Edit a task in a project
      parameters:
        - name: project_id
          in: path
          description: ID of the project
          required: true
          schema:
            type: integer
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
        - in: body
          name: task
          description: Task object
          required: true
          schema:
            type: object
            properties:
              title:
                type: string
              description:
                type: string
              priority:
                type: integer
              assignee_id:
                type: integer
      responses:
        '200':
          description: Task updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  task:
                    type: object
                    properties:
                      id:
                        type: integer
                      title:
                        type: string
                      description:
                        type: string
                      priority:
                        type: integer
                      assignee_id:
                        type: integer
        '404':
          description: Project or task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string

    delete:
      tags:
        - task
      summary: Delete a task from a project
      parameters:
        - name: project_id
          in: path
          description: ID of the project
          required: true
          schema:
            type: integer
        - name: task_id
          in: path
          description: ID of the task
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Task deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: Project or task not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
  /stats:
    get:
      tags:
        - user
      summary: Get user statistics
      description: Retrieves statistics for the user's API methods
      security:
        - JWT: [ ]
      responses:
        '200':
          description: User stats
          content:
            application/json:
              description: Successful operation
              schema:
                type: object
                properties:
                  methods:
                    type: object
                    properties:
                      GET:
                        type: integer
                      POST:
                        type: integer
                      PUT:
                        type: integer
                      DELETE:
                        type: integer
                      PATCH:
                        type: integer
                      HEAD:
                        type: integer
                      OPTIONS:
                        type: integer
                      CONNECT:
                        type: integer
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
