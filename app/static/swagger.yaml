swagger: '2.0'
info:
  title: API Documentation
  version: '1.0'
tags:
  - name: auth
    description: Endpoints related to authentication
  - name: project
    description: Endpoints related to projects
  - name: task
    description: Endpoints related to tasks
  - name: user
    description: Endpoints related to user statistics
paths:
  /auth/register:
    post:
      tags:
        - auth
      summary: Register a new user
      responses:
        '201':
          description: User registered successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: User registered successfully
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid role or user already exists
  /auth/login:
    post:
      tags:
        - auth
      summary: User login
      responses:
        '200':
          description: User login successful
          schema:
            type: object
            properties:
              access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
                example: Username or email is missing or provide either username or email (not both)
        '401':
          description: Unauthorized
          schema:
            type: object
            properties:
              message:
                type: string
                example: Invalid credentials
  /project/projects:
    get:
      tags:
        - project
      summary: Get all projects
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              projects:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: Project 1
                    description:
                      type: string
                      example: This is project 1
                    status:
                      type: string
                      example: TO DO
                    priority:
                      type: string
                      example: High
                    owner_id:
                      type: integer
                      example: 1
        '403':
          description: Access forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: Access forbidden
  /project/project/add:
    post:
      tags:
        - project
      summary: Add a new project
      responses:
        '201':
          description: Project added successfully
          schema:
            type: object
            properties:
              project:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  owner:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Project 1
                  description:
                    type: string
                    example: This is project 1
                  priority:
                    type: string
                    example: High
                  status:
                    type: string
                    example: TO DO
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              error:
                type: string
                example: Missing required fields
  /project/project/{id}:
    get:
      tags:
        - project
      summary: Get a project by ID
      parameters:
        - name: id
          in: path
          description: ID of the project to retrieve
          required: true
          type: integer
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              project:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  owner:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Project 1
                  description:
                    type: string
                    example: This is project 1
                  priority:
                    type: string
                    example: High
                  status:
                    type: string
                    example: TO DO
                  tasks:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          example: 1
                        title:
                          type: string
                          example: Task 1
                        description:
                          type: string
                          example: This is task 1
                        priority:
                          type: string
                          example: High
                        assignee:
                          type: integer
                          example: 1
        '404':
          description: Project not found
          schema:
            type: object
            properties:
              message:
                type: string
                example: Project not found
    delete:
      tags:
        - project
      summary: Delete a project by ID
      parameters:
        - name: id
          in: path
          description: ID of the project to delete
          required: true
          type: integer
      responses:
        '200':
          description: Project deleted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Project deleted successfully
        '403':
          description: Access forbidden
          schema:
            type: object
            properties:
              message:
                type: string
                example: You do not own this project
        '404':
          description: Project not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: Project not found
  /project/project/{project_id}/task/add:
    post:
      tags:
        - task
      summary: Add a new task to a project
      parameters:
        - name: project_id
          in: path
          description: ID of the project to add the task to
          required: true
          type: integer
      responses:
        '201':
          description: Task added successfully
          schema:
            type: object
            properties:
              task:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Task 1
                  description:
                    type: string
                    example: This is task 1
                  priority:
                    type: string
                    example: High
                  assignee_id:
                    type: integer
                    example: 1
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              error:
                type: string
                example: Missing required fields
        '404':
          description: Project not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: Project not found
  /project/project/{project_id}/task/{task_id}:
    put:
      tags:
        - task
      summary: Edit a task in a project
      parameters:
        - name: project_id
          in: path
          description: ID of the project containing the task
          required: true
          type: integer
        - name: task_id
          in: path
          description: ID of the task to edit
          required: true
          type: integer
      responses:
        '200':
          description: Task updated successfully
          schema:
            type: object
            properties:
              task:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: Task 1
                  description:
                    type: string
                    example: This is task 1
                  priority:
                    type: string
                    example: High
                  assignee_id:
                    type: integer
                    example: 1
        '404':
          description: Project or task not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: Project not found
    delete:
      tags:
        - task
      summary: Delete a task from a project
      parameters:
        - name: project_id
          in: path
          description: ID of the project containing the task
          required: true
          type: integer
        - name: task_id
          in: path
          description: ID of the task to delete
          required: true
          type: integer
      responses:
        '200':
          description: Task deleted successfully
          schema:
            type: object
            properties:
              message:
                type: string
                example: Task deleted successfully
        '404':
          description: Project or task not found
          schema:
            type: object
            properties:
              error:
                type: string
                example: Project not found
  /user/stats:
    get:
      tags:
        - user
      summary: Get user statistics
      responses:
        '200':
          description: Successful operation
          schema:
            type: object
            properties:
              methods:
                type: object
                properties:
                  GET:
                    type: integer
                    example: 5
                  POST:
                    type: integer
                    example: 2
                  PUT:
                    type: integer
                    example: 1
                  DELETE:
                    type: integer
                    example: 3
                  PATCH:
                    type: integer
                    example: 0
                  HEAD:
                    type: integer
                    example: 0
                  OPTIONS:
                    type: integer
                    example: 0
                  CONNECT:
                    type: integer
                    example: 0


